<!--
Button for use under <AppNavBar>.
Takes an icon image URL and label text as properties.
Each button must also be manually allocated a unique id.
Exactly one button should be selected to have initial content displayed.

If buttons are different pages ("spa=false"), you should specify the 'src' attribute.
-->


<template>
  <li>
    <button :to="src" class="">
      <slot />
  </button></li>
</template>


<script>

export default {
  props: {
    option: String,
    selected: Boolean,
    src: String,
  }
}

</script>


<style>
 


body {
  margin: 150px 0 0;
  height: 100%;
  overflow-y: scroll;
  font-family: sans-serif;
  font-size: 16px;
  perspective: 350px;
}
ul.qbtns {
  display:flex;
 
   justify-content: space-around;
    
  transform-style: preserve-3d;
  list-style:none;
}
.qbtns li{
  display:inline-flex;
  padding:10px;
  flex:1;
    justify-content: space-around;
    
}


.qbtns button {
  position: relative;
  display: flex;
  flex:1;
  padding: 4px 16px;
  border: 0;
  border-radius: 3px;
  min-width: 48px;
  margin: 10px;
  font-size: 24px;
  font-weight: bold;
  background-color: #3075cf;
  background-image: radial-gradient(ellipse at top, rgba(255, 255, 255, 0.15) 50%, rgba(0, 0, 0, 0));
  color: #303030;
  transform-style: preserve-3d;
  transform: translateZ(18px);
  cursor: pointer;
  user-select: none;

  /* double colon syntax for pseudo elements because IE8 doesn't need to see them (no transforms) */
  /* pushing the button down; done with animations with steps because transitions are too buggy and jumpy */
}
.qbtns button:focus {
  outline: none;
}
.qbtns button::before, .qbtns button::after {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  background: #3075cf;
  transform-origin: 0% 0%;
}
.qbtns button::before {
  content: "";
  height: 18px;
  background: #3075cf;
  transform: rotateX(-90deg);
}
.qbtns button::after {
  content: "";
  width: 18px;
  transform: rotateY(90deg);
}
.qbtns .top-half button::before {
  top: auto;
  bottom: 0;
  background: #3075cf;
  transform-origin: 100% 100%;
  transform: rotateX(90deg);
}
.qbtns .left-half button::after {
  left: auto;
  right: 0;
  transform-origin: 100% 100%;
  transform: rotateY(-90deg);
}
.qbtns button:active {
  animation: button 80ms steps(20) both;
}
.qbtns button:active::before {
  animation: buttonbefore 80ms steps(20) both;
}
.qbtns button:active::after {
  animation: buttonafter 80ms steps(20) both;
}

@keyframes button {
  to {
    transform: translateZ(9px);
  }
}
@keyframes buttonbefore {
  to {
    height: 9px;
  }
}
@keyframes buttonafter {
  to {
    width: 9px;
  }
}
/* hide pseudo elements in IE9 and IE10 (no 3D transforms) */
@media screen and (min-width: 0\0) {
  .qbtns button::before, .qbtns button::after {
    display: none;
  }
}
/* hide pseudo elements in non-webkit Opera) */
x:-o-prefocus, .qbtns button::before, .qbtns button::after {
  display: none;
}




.app-nav-button {
  flex-basis: 100%;
  align-items: stretch;
  list-style: none;
  text-align: center;
  cursor: pointer;
  /* padding: 4px; */
  text-decoration: none;
background: rgba(255,255,255,.5);
  /* fill: #888; */
  outline: none;

  box-shadow: inset 0 0 3px 1px rgba(48,48,48,.62);

          transition: all 333ms ease-in;

}
.app-nav-button:hover {
  
background: rgba(255,255,255,.8);
 box-shadow: inset 0 0 3px 1px rgba(48,48,48,.38);
        transition: all 162ms ease;

}
.app-nav-button[selected] {
  color: #fff;
  fill: #fff;
}

.app-nav-button__link {
  color: inherit;
  text-decoration: none;
  height: 100%;
}

.app-nav-button__link:visited {
    fill: inherit;
    color: inherit;
}

amp-selector [option][selected] {
  outline: none;
} 


</style>
